@page 
@model Ecobadge_Website.Pages.DirectoryModel
@{
    ViewData["Title"] = "Directory";
}

@section Styles {
    <link href="@Url.Content("~/css/directory.css")" rel="stylesheet" type="text/css" />
}

@section Scripts{
    <script src="https://unpkg.com/feather-icons"></script>
    <script>
        feather.replace()
    </script>
} 

<div class="container-fluid p-10">

    <div class="row">

        <div class="col-6 offset-3 text-container">
            <div class="row">
                <div class="col-5">
                    <div class="row">
                        <input class="form-check-input" type="checkbox" value="" id="vegan">
                            <label class="form-check-label" for="vegan">
                            Vegan Friendly
                        </label>
                    </div>
                    <div class="row">
                        <input class="form-check-input" type="checkbox" value="" id="plastic">
                            <label class="form-check-label" for="plastic">
                            Doesn't use single use plastic
                        </label>
                    </div>
                    <div class="row">
                        <input class="form-check-input" type="checkbox" value="" id="foodwaste">
                            <label class="form-check-label" for="foodwaste">
                            Foodwaste collection scheme
                        </label>
                    </div>
                    <div class="row">
                        <input class="form-check-input" type="checkbox" value="" id="local">
                            <label class="form-check-label" for="local">
                            Local produce
                        </label>
                    </div>
                </div>

                <div class="col-5">
                    <div class="dropdown py-1">
                        <button class="btn-block btn-success dropdown-toggle" type="button" data-toggle="dropdown">
                            Location
                            <span class="caret"></span>
                        </button>
                        <div class="dropdown-menu" id="locations">

                        </div>
                    </div>

                    <div class="dropdown py-1">
                        <button class="btn-block btn-success dropdown-toggle" type="button" data-toggle="dropdown">
                            Cuisine
                            <span class="caret"></span>
                        </button>
                        <div class="dropdown-menu" id="cuisines">
                        </div>
                    </div>

                    <div class="dropdown py-1">
                        <button class="btn-block btn-success dropdown-toggle" type="button" data-toggle="dropdown">
                            Eco Badge Tier
                            <span class="caret"></span>
                        </button>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" href="#" onclick="ddTier(this)">Bronze</a>
                            <a class="dropdown-item" href="#" onclick="ddTier(this)">Silver</a>
                            <a class="dropdown-item" href="#" onclick="ddTier(this)">Gold</a>
                            <a class="dropdown-item" href="#" onclick="ddTier(this)">Platinum</a>
                        </div>
                    </div>
                </div>

                <div class="col-2">
                    <button type="button" class="btn btn-primary btn-lg btn-block" style="display: block; width: 100%; height:100%;" onclick="applyFilters()">
                        <i data-feather="refresh-cw"></i>
                    </button>
                </div>

            </div>
        </div>
    </div>

    <div class="table-wrapper">

        <table class="table table-hover" style="margin-bottom:0" id="businesses">

            <thead>
                <tr>
                    <th>Company</th>
                    <th>County</th>
                    <th>Street</th>
                    <th>Postcode</th>
                    <th>Telephone</th>
                    <th>Tier</th>
                    <th>Cuisines</th>
                    <th style="text-align:center">Vegan friendly</th>
                    <th style="text-align:center">Doesn't use single use plastic</th>
                    <th style="text-align:center">Foodwaste collection scheme</th>
                    <th style="text-align:center">Local produce</th>
                </tr>
            </thead>

            <tbody>

            </tbody>

        </table>
    </div>
</div>


<script>
    const element = document.getElementById("parent");
    element.classList.remove("container");
    element.classList.add("container-fluid");

    const locations = [];
    const cuisines = {};

    const locationFilters = [];
    const cuisineFilters = [];
    const tierFilters = [];

    fetchCompanies().then(fetchCuisines).then(fetchCompanyCuisines).then(function() {
        locationFiltersItems();
        cuisineFiltersItems();
    })

    function ddTier(element){

        if(tierFilters.includes(element.innerText)){

            tierFilters.splice(tierFilters.indexOf(element.innerText), 1);
            element.classList.remove("active");
        }

        else{
            tierFilters.push(element.innerText);
            element.classList.add("active");
        }
    }

    function ddCuisines(element){

        if(cuisineFilters.includes(element.innerText)){
            cuisineFilters.splice(cuisineFilters.indexOf(element.id), 1);
            element.classList.remove("active");
        }

        else{
            cuisineFilters.push(element.innerText);
            element.classList.add("active");
        }
    }

    function ddLocations(element){

        if(locationFilters.includes(element.innerText)){

            locationFilters.splice(locationFilters.indexOf(element.innerText), 1);
            element.classList.remove("active");
        }

        else{
            locationFilters.push(element.innerText);
            element.classList.add("active");
        }
    }

    function applyFilters(){

        $("#businesses tbody tr").remove();

        fetchCompanies().then(fetchCuisines).then(fetchCompanyCuisines).then(function() {

            if(tierFilters.length>0){
                rows = document.querySelectorAll('tr');
                for(var i=1; i<rows.length; i++){
                    const tiersCol = rows[i].getElementsByTagName('td')[5];

                    if(!tierFilters.includes(tiersCol.innerText)){
                        rows[i].remove();
                    }

                }
            }

            if(locationFilters.length>0){
                rows = document.querySelectorAll('tr');

                for(var i=1; i<rows.length; i++){
                    const locationCol = rows[i].getElementsByTagName('td')[1];

                    if(!locationFilters.includes(locationCol.innerText)){
                        rows[i].remove();
                    }

                }
            }

            const mustHaves = ["vegan", "plastic", "foodwaste", "local"];

            for(var i=0; i<mustHaves.length; i++){
                const element = document.getElementById(mustHaves[i]);

                if(element.checked == true){
                    rows = document.querySelectorAll('tr');

                    for(var j=1; j<rows.length; j++){

                        let mh = rows[j].getElementsByTagName('td')[7];

                        if(i==1) {mh = rows[j].getElementsByTagName('td')[8];}
                        if(i==2) {mh = rows[j].getElementsByTagName('td')[9];}
                        if(i==3) {mh = rows[j].getElementsByTagName('td')[10];}

                        const child = mh.firstChild;

                        if(child.classList.contains("feather-x")){
                            rows[j].remove();
                        }
                    }
                }
            }


            if(cuisineFilters.length>0){
                let rows = document.querySelectorAll('tr');
                for(var i=1; i<rows.length; i++){

                    const cuisinesCol = rows[i].getElementsByTagName('td')[6];

                    let cuisines = cuisinesCol.innerText.split("\n");
                    cuisines = cuisines.filter(item => item); // Remove empty strings

                    let del = true;
                    for(var j=0; j<cuisines.length; j++){
                        if(cuisineFilters.includes(cuisines[j])){
                            console.log("Row includes:", rows[i]);
                            del = false;
                        }
                    }

                    if (del == true){
                        rows[i].remove();
                    }
                }
            }

        })
    }

    function locationFiltersItems(){

        locations.sort();

        for(i=0; i<locations.length; i++){
            const value = locations[i];
            $("#locations").append(`<a class="dropdown-item" href="#" onclick="ddLocations(this)">${value}</a>`);
        }
    }

    function cuisineFiltersItems(){

        const cuisineList  = [];

        for (var key in cuisines){
            const value = cuisines[key];
            cuisineList.push(value);
        }

        // Easier to sort a list than a dictionary so export all cuisine names within the dict to cuisineList
        cuisineList.sort();

        // Print the alpabetical ordering of cuisines
        for(i=0; i<cuisineList.length; i++){
            var value = cuisineList[i];
            $("#cuisines").append(`<a class="dropdown-item" href="#" onclick="ddCuisines(this)">${value}</a>`);
        }
    }

    async function fetchCompanies() {

        const url = "https://localhost:44393/api/companies";
        const raw = await fetch(url);

        const data = await raw.json();

        data.forEach(({ companyId, companyName, county, address, postcode, tel, ecobadgeTier, veganDishes, singleUsePlastic, foodWasteCollectionScheme, localProduce }) => {
            

            var mustHaves = [veganDishes, singleUsePlastic, foodWasteCollectionScheme, localProduce];

            for(var i = 0; i<4; i++){

                if (mustHaves[i] == true){
                    mustHaves[i] = '<i data-feather="check"></i>';
                }
                else{
                    mustHaves[i] = '<i data-feather="x"></i>';
                }
            }

            veganDishes = mustHaves[0];
            singleUsePlastic = mustHaves[1];
            foodWasteCollectionScheme = mustHaves[2];
            localProduce = mustHaves[3];

            $("#businesses").find('tbody').append(`<tr id="${companyId}" class="js-file-line" onclick="location.href = '@(Url.Page("BusinessProfile", new { }))?id=' + ${companyId}">
                <td>${companyName}</td>
                <td>${county}</td>
                <td>${address}</td>
                <td>${postcode}</td>
                <td>${tel}</td>
                <td>${ecobadgeTier}</td>
                <td></td>
                <td style="text-align:center">${veganDishes}</td>
                <td style="text-align:center">${singleUsePlastic}</td>
                <td style="text-align:center">${foodWasteCollectionScheme}</td>
                <td style="text-align:center">${localProduce}</td>
                </tr>`);

            if (!locations.includes(county)){
                locations.push(county);
            }
        });
        
        feather.replace();
    }

    async function fetchCuisines() {

        const url = "https://localhost:44393/api/cuisines";
        const raw = await fetch(url);

        const data = await raw.json();

        data.forEach(({cuisineId, cuisineName }) => {
            cuisines[cuisineId] = cuisineName;
        });
    }

    async function fetchCompanyCuisines(){
        const url = "https://localhost:44393/api/companycuisines";
        const raw = await fetch(url);

        const data = await raw.json();

        data.forEach(({cuisineId, companyId }) => {

            const row = document.getElementById(companyId);

            if(row){
                const value = cuisines[cuisineId];
                const col = row.getElementsByTagName('td')[6];
                col.innerText += value + "\n";
            }
        });

    }

</script>